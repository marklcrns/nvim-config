# why use yaml to manage plugins
# see http://genkisugimoto.com/blog/manage-vim-plugins-via-yaml/
# hook_add:         executed after the line is parsed
# hook_source:      executed before each plugin is sourced
# hook_post_source: executed after each plugin is sourced
# hook_post_update: executed after each plugin is updated
# hook_done_update: executed after all plugins are updated

# Normal Loaded Plugins
# ==========================================

# Startup {{{
- repo: Shougo/dein.vim

- repo: glepnir/dashboard-nvim
  hook_source: source $VIM_PATH/config/plugins/dashboard.vim

# Completion
# ----------------------------------------
- repo: neoclide/coc.nvim
  merged: 0
  rev: release
  hook_source: source $VIM_PATH/config/plugins/coc.vim

- repo: liuchengxu/vim-which-key
  hook_source: source $VIM_PATH/config/plugins/whichkey.vim

# Tools
# ----------------------------------------
- repo: marklcrns/vim-smartq
  on_event: FileType
  rev: dev

- repo: christoomey/vim-tmux-navigator
  if: "! (has('win32') || has('win64'))"
  hook_add: |
    let g:tmux_navigator_disable_when_zoomed = 1
    let g:tmux_navigator_no_mappings = 1

- repo: tpope/vim-eunuch
- repo: Shougo/context_filetype.vim
- repo: skywind3000/asyncrun.vim

- repo: dhruvasagar/vim-zoom
  hook_add: |
    let g:zoom#statustext = 'F'
- repo: szw/vim-maximizer
  hook_source: |
    let g:maximizer_set_default_mapping = 0

- repo: sgur/vim-editorconfig
  hook_add: source $VIM_PATH/config/plugins/vim-editorconfig.vim

- repo: camspiers/lens.vim
  hook_source: source $VIM_PATH/config/plugins/lens.vim

# Improve CursorHold performance: https://github.com/neovim/neovim/issues/12587
- repo: antoinemadec/FixCursorHold.nvim
  if: "has('nvim')"

# Vim8 only:
- repo: roxma/nvim-yarp
  if: "!has('nvim')"
  depends: vim-hug-neovim-rpc

- repo: roxma/vim-hug-neovim-rpc
  if: "!has('nvim')"
# }}}


# Lazy Loading
# ==========================================

# Completion{{{
- repo: SirVer/ultisnips
  if: has('python3')
  on_event: FileType
  hook_add: source $VIM_PATH/config/plugins/ultisnips.vim

- repo: honza/vim-snippets
  if: has('python3')
  depends: ultisnips
  on_event: FileType
  merged: 0
# }}}

# Syntax{{{

# Coding tools
# ----------------------------------------
- repo: junegunn/vim-easy-align
  on_event: FileType
  hook_add: source $VIM_PATH/config/plugins/vim-easy-align.vim

- repo: AndrewRadev/sideways.vim
  on_event: FileType

- repo: AndrewRadev/splitjoin.vim
  on_event: FileType
  hook_add: |
    let g:splitjoin_split_mapping = '<C-k>'
    let g:splitjoin_join_mapping = '<C-j>'

- repo: kana/vim-niceblock
  on_map: { x: <Plug> }
  hook_add: |
    let g:niceblock_no_default_key_mappings = 0

- repo: b3nj5m1n/kommentary
  on_event: FileType

- repo: machakann/vim-sandwich
  on_map: { vonx: <Plug>(operator-sandwich- }
  hook_add: source $VIM_PATH/config/plugins/vim-sandwich.vim

- repo: Raimondi/delimitMate
  on_event: FileType
  hook_source: source $VIM_PATH/config/plugins/delimitMate.vim

# Git{{{
- repo: lambdalisue/gina.vim
  on_cmd: Gina
  on_ft: [gitcommit, gitrebase]
  hook_source: source $VIM_PATH/config/plugins/gina.vim

- repo: rhysd/committia.vim
  on_event: BufReadPost
  hook_source: source $VIM_PATH/config/plugins/committia.vim

- repo: airblade/vim-gitgutter
  on_event: FileType
  hook_add: source $VIM_PATH/config/plugins/vim-gitgutter.vim

- repo: tyru/open-browser.vim
  hook_source: |
    let g:netrw_nogx = 1
    command! -nargs=1 Browse OpenBrowser <args>
# }}}

# Tools{{{
# - { repo: itchyny/vim-gitbranch, on_event: FileType }
- { repo: romainl/vim-cool }

- repo: airblade/vim-rooter
  on_event: FileType
  hook_add: source $VIM_PATH/config/plugins/vim-rooter.vim

- repo: nvim-neorg/neorg-telescope
  depends: [neorg, telescope.nvim]

- repo: thinca/vim-quickrun
  on_cmd: QuickRun
  hook_add: source $VIM_PATH/config/plugins/vim-quickrun.vim

- repo: kshenoy/vim-signature
  on_event: FileType
  hook_add: source $VIM_PATH/config/plugins/vim-signature.vim

- repo: tpope/vim-abolish
  on_event: FileType

- repo: simnalamburt/vim-mundo
  on_map: {n: <Plug>}

- repo: tpope/vim-repeat
  on_map: .*

- repo: easymotion/vim-easymotion
  on_map: {n: <Plug>}
  hook_add: source $VIM_PATH/config/plugins/vim-easymotion.vim

- repo: ggandor/lightspeed.nvim
  if: "has('nvim-0.5')"
# }}}

# UI{{{
- repo: lukas-reineke/indent-blankline.nvim
  on_event: FileType
  hook_source: luafile $VIM_PATH/config/plugins/indent-blankline.lua

- repo: norcalli/nvim-colorizer.lua
  if: "has('nvim-0.5')"
  on_event: FileType
  hook_source: luafile $VIM_PATH/config/plugins/colorizer.lua

- repo: romainl/vim-qf
  on_ft: qf
  on_event: QuickFixCmdPost
  on_map: { n: <Plug> }
  hook_source: source $VIM_PATH/config/plugins/vim-qf.vim

- repo: rhysd/accelerated-jk
  on_map: { n: <Plug> }

- repo: kyazdani42/nvim-tree.lua
  if: "has('nvim-0.5')"
  on_cmd: [NvimTreeToggle, NvimTreeOpen, NvimTreeFindFile]
  hook_source: |
    source $VIM_PATH/config/plugins/nvim-tree.lua
    source $VIM_PATH/config/plugins/nvim-tree.vim
- repo: kyazdani42/nvim-web-devicons
  if: "has('nvim-0.5')"

- repo: nvim-lua/popup.nvim
  if: "has('nvim-0.5')"
- repo: nvim-lua/plenary.nvim
  if: "has('nvim-0.5')"
- repo: nvim-telescope/telescope.nvim
  if: "has('nvim-0.5')"
  hook_source: luafile $VIM_PATH/config/plugins/telescope.lua
# }}}

# ETC {{{
- repo: dstein64/vim-startuptime
  on_event: VimEnter

- repo:  ianding1/leetcode.vim
  on_cmd: [LeetCodeList, LeetCodeTest, LeetCodeSubmit, LeetCodeSignIn]
  hook_add: |
    let g:leetcode_browser = 'firefox'
    let g:leetcode_solution_filetype = 'java'
# }}}

